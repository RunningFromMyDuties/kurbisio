on:
  push:
    branches:
      - master
  pull_request:

name: Build & Test

jobs:
  container-job:
    runs-on: ubuntu-latest
    container: golang
    name: Go test

    services:
      postgres:
        image: postgres:12.2-alpine
        env:
          POSTGRES_USER: runner
          POSTGRES_PASSWORD: docker
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2-beta
        with:
          go-version: ^1.14.2

      - name: go lint
        run: |
          go get -u golang.org/x/lint/golint 
          golint -set_exit_status ./...

      - name: go test
        run: |
          go generate ./...
          go test ./...
        env:
          POSTGRES: "host=postgres port=5432 user=runner password=docker dbname=postgres sslmode=disable"

      - name: go test race
        run: |
          go test ./... -race
        env:
          POSTGRES: "host=postgres port=5432 user=runner password=docker dbname=postgres sslmode=disable"

  build:
    runs-on: ubuntu-latest
    name: Go build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2-beta
        with:
          go-version: ^1.14.2
      - name: go build
        run: |
          go generate ./...
          for f in services/fitness/data/workout_plan_templates/*.json; do go run services/fitness/tools/schema/main.go -filename $f -schema https://loyalty2you.com/schemas/workout_plan_properties.json  ; done
          GOOS=linux GOARCH=amd64 go build -o fitness ./services/fitness 
          GOOS=linux GOARCH=amd64 go build -o fleet ./services/fleet
